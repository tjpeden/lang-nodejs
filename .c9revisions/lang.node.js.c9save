{"ts":1345504900677,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1345504922574,"patch":[[{"diffs":[[1,"function self(x) { return x; }\r\n\r\nfunction $A(iterable) {\r\n  if(!iterable) return [];\r\n  if(iterable.toArray) return iterable.toArray();\r\n  var length = iterable.length || 0, result = new Array(length);\r\n  while(length--) result[length] = iterable[length];\r\n  return result;\r\n}\r\n\r\n/**\r\n * Object\r\n */\r\n\r\nObject.extend = function(destination) {\r\n  var args = $A(arguments).slice(1);\r\n  \r\n  args.forEach(function(source) {\r\n    for(var property in source)\r\n      if(source.hasOwnProperty(property))\r\n        destination[property] = source[property];\r\n  });\r\n  \r\n  return destination;\r\n};\r\n\r\nObject.extend(Object.prototype, {\r\n  _send: function(message) {\r\n    var response = this[message];\r\n    if(response instanceof Function) {\r\n      response = response.apply(this, $A(arguments).slice(1));\r\n    }\r\n    return response;\r\n  }\r\n});\r\n\r\n/**\r\n * Enumerable\r\n */\r\n\r\nvar Enumerable = {\r\n  inject: function inject(memo, iterator) {\r\n    this.forEach(function(value, index) {\r\n      memo = iterator(memo, value, index);\r\n    });\r\n    return memo;\r\n  },\r\n  pluck: function pluck(first) {\r\n    var args = $A(arguments);\r\n    return this.map(args.length > 1 ? args.toProc() : first.toProc());\r\n  },\r\n  grep: function grep(filter, iterator) {\r\n    iterator = iterator || self;\r\n    var result = [];\r\n    this.forEach(function(value) {\r\n      if(filter.match(value)) {\r\n        result.push(iterator.call(value));\r\n      }\r\n    });\r\n    return result;\r\n  },\r\n  sortBy: function sortBy(iterator) {\r\n    return this.map(function(value) {\r\n      return {\r\n        value: value,\r\n        criteria: iterator(value)\r\n      };\r\n    }).sort(function(left, right) {\r\n      var a = left.criteria, b = right.criteria;\r\n      return a < b ? -1 : a > b ? 1 : 0;\r\n    }).pluck('value');\r\n  },\r\n  toArray: function toArray() {\r\n    return this.map();\r\n  },\r\n  toProc: function() {\r\n    var procs = this.map('toProc'.toProc());\r\n    return function(thing) {\r\n      return procs.map(function(proc) {\r\n        return proc(thing);\r\n      });\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Array\r\n */\r\n\r\nObject.extend(Array.prototype, Enumerable, {\r\n  clear: function clear() {\r\n    this.length = 0;\r\n    return this;\r\n  },\r\n  first: function first() {\r\n    return this[0];\r\n  },\r\n  last: function last() {\r\n    return this[this.length-1];\r\n  }\r\n});\r\n\r\n/**\r\n * Hash\r\n */\r\n\r\nfunction Hash(object) {\r\n  this._object = object;\r\n}\r\n\r\nObject.extend(Hash.prototype, Enumerable, {\r\n  forEach: function forEach(iterator) {\r\n    for(var key in this._object) {\r\n      if(this._object.hasOwnProperty(key)) {\r\n        var value = this._object[key], pair = [key, value];\r\n        Object.extend(pair, {key: key, value: value});\r\n        iterator(pair);\r\n      }\r\n    }\r\n  },\r\n  map: function map(iterator) {\r\n    var result = [];\r\n    iterator = iterator || self;\r\n    \r\n    this.forEach(function(value) {\r\n      result.push(iterator(value));\r\n    });\r\n    \r\n    return result;\r\n  }\r\n});\r\n\r\nfunction $H(object) {\r\n  return new Hash(object);\r\n}\r\n\r\n/**\r\n * Range\r\n */\r\n\r\nfunction Range(start, end, exclusive) {\r\n  this.start     = start;\r\n  this.end       = end;\r\n  this.exclusive = exclusive;\r\n}\r\n\r\nObject.extend(Range.prototype, {\r\n  forEach: function forEach(iterator) {\r\n    var value = this.start;\r\n    while(this.include(value)) {\r\n      iterator(value);\r\n      value = value.succ();\r\n    }\r\n  },\r\n  include: function include(value) {\r\n    if(value < this.start) return false;\r\n    if(this.exclusive) return value < this.end;\r\n    return value <= this.end;\r\n  }\r\n});\r\n\r\nfunction $R(start, end, exclusive) {\r\n  return new Range(start, end, exclusive);\r\n}\r\n\r\n/**\r\n * Number\r\n */\r\n\r\nObject.extend(Number.prototype, {\r\n  succ: function succ() {\r\n    return this + 1;\r\n  },\r\n  times: function times(iterator) {\r\n    $R(0, this, true).forEach(iterator);\r\n    return this;\r\n  }\r\n});\r\n\r\n['abs', 'round', 'ceil', 'floor'].forEach(function(method) {\r\n  Number.prototype[method] = function() {\r\n    return Math[method](this);\r\n  };\r\n});\r\n\r\n\r\n/**\r\n * String\r\n */\r\n\r\nObject.extend(String.prototype, {\r\n  include: function(pattern) {\r\n    return this.indexOf(pattern) > -1;\r\n  },\r\n  toInt: function toInt(radix) {\r\n    radix = radix || 10;\r\n    return parseInt(this, radix);\r\n  },\r\n  toFloat: function toFloat() {\r\n    return parseFloat(this);\r\n  },\r\n  toProc: function() {\r\n    var messages = this.split('.');\r\n    return function(thing) {\r\n      return messages.inject(thing, function(obj, message) {\r\n        return obj._send(message);\r\n      });\r\n    };\r\n  }\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":4490}]],"length":4490,"saved":false}
{"contributors":[],"silentsave":false,"ts":1345661590801,"patch":[[{"diffs":[[1,"\"use strict\";\r\n\r\n"],[0,"function self(x)"]],"start1":0,"start2":0,"length1":16,"length2":33},{"diffs":[[0,"pe, {\r\n "],[-1," "],[0,""],[1,""],[0,"_send: f"]],"start1":634,"start2":634,"length1":17,"length2":16},{"diffs":[[0,"e;\r\n  }\r\n});\r\n\r\n"],[1,"Object.defineProperty(Object.prototype, '$', {\r\n  get: function() {\r\n    if('toProc' in this) return this._send('toProc');\r\n  }\r\n});\r\n\r\n"],[0,"/**\r\n * Enumerab"]],"start1":834,"start2":834,"length1":32,"length2":168},{"diffs":[[0,".map();\r\n  }"],[1,"/*"],[0,",\r\n  toProc:"]],"start1":1966,"start2":1966,"length1":24,"length2":26},{"diffs":[[0,"toProc: function"],[1," toProc"],[0,"() {\r\n    var pr"]],"start1":1985,"start2":1985,"length1":32,"length2":39},{"diffs":[[0," };\r\n  }"],[-1,""],[0,""],[1,"*/"],[0,"\r\n};\r\n\r\n"]],"start1":2174,"start2":2174,"length1":16,"length2":18},{"diffs":[[0,"\n  }"],[-1,",\r\n  first: function first"],[1,"\r\n});\r\n\r\nObject.defineProperty(Array.prototype, 'toProc', {\r\n  get: function() {\r\n    console.log(this);\r\n    var procs = this.map('toProc'.toProc);\r\n    return function(thing) {\r\n      return procs.map(function(proc) {\r\n        return proc(thing);\r\n      });\r\n    };\r\n  }\r\n});\r\n\r\nObject.defineProperty(Array.prototype, 'first', {\r\n  get: function"],[0,"() {"]],"start1":2328,"start2":2328,"length1":34,"length2":355},{"diffs":[[0,"\n  }"],[-1,","],[0,"\r\n"],[-1,"  las"],[1,"});\r\n\r\nObject.defineProperty(Array.prototype, 'last', {\r\n  ge"],[0,"t: f"]],"start1":2705,"start2":2705,"length1":16,"length2":71},{"diffs":[[0,"tion"],[-1," last"],[0,"() {"]],"start1":2779,"start2":2779,"length1":13,"length2":8},{"diffs":[[0,"(this);\r\n  }"],[1,"/*"],[0,",\r\n  toProc:"]],"start1":4793,"start2":4793,"length1":24,"length2":26},{"diffs":[[0,"toProc: function"],[1," toProc"],[0,"() {\r\n    var me"]],"start1":4812,"start2":4812,"length1":32,"length2":39},{"diffs":[[0,"\r\n      });\r\n    };\r\n  }"],[1,"*/"],[0,"\r\n});"],[1,"\r\n\r\nObject.defineProperty(String.prototype, 'toProc', {\r\n  get: function() {\r\n    var messages = this.split('.');\r\n    return function(thing) {\r\n      console.log(\"thing:\", thing);\r\n      return messages.inject(thing, function(obj, message) {\r\n        console.log(\"obj\", obj);\r\n        return obj._send(message);\r\n      });\r\n    };\r\n  }\r\n});\r\n\r\nvar f = 'toProc'.toProc;\r\nconsole.log(f);\r\nconsole.log(f('toString'));\r\n\r\n/*\r\nvar tests = ['test1', 'test2', 'test3'];\r\nconsole.log('test'.toProc, ['test'].toProc);\r\n//console.log('test'.$, ['test'].$);\r\nconsole.log(tests.first, tests.last);\r\n*/"]],"start1":5004,"start2":5004,"length1":29,"length2":621}]],"length":5625,"saved":false}
{"contributors":[],"silentsave":false,"ts":1345661599584,"patch":[[{"diffs":[[-1,"\"use strict\";\r\n\r\n"],[0,"func"]],"start1":0,"start2":0,"length1":21,"length2":4}]],"length":5608,"saved":false}
{"ts":1345661630869,"patch":[[{"diffs":[[0,", index) {\r\n"],[1,"      console.log(value, index);\r\n"],[0,"      memo ="]],"start1":1092,"start2":1092,"length1":24,"length2":58}]],"length":5642,"saved":false}
{"ts":1345661682570,"patch":[[{"diffs":[[0,"log(\"obj"],[1,":"],[0,"\", obj);"]],"start1":5312,"start2":5312,"length1":16,"length2":17}]],"length":5643,"saved":false}
{"ts":1345661759103,"patch":[[{"diffs":[[0,"j:\", obj);\r\n"],[1,"        console.log(\"message:\", message);\r\n"],[0,"        retu"]],"start1":5319,"start2":5319,"length1":24,"length2":67}]],"length":5686,"saved":false}
{"ts":1345661811050,"patch":[[{"diffs":[[0," {\r\n"],[-1,"      console.log(value, index);\r\n"],[0,"    "]],"start1":1100,"start2":1100,"length1":42,"length2":8}]],"length":5652,"saved":false}
{"contributors":[],"silentsave":false,"ts":1345763718261,"patch":[[{"diffs":[[0,"unction) {\r\n"],[1,"      var args = $A(arguments).slice(1);\r\n      \r\n      if(args.length == response.length) {\r\n  "],[0,"      respon"]],"start1":716,"start2":716,"length1":24,"length2":120},{"diffs":[[0,"is, "],[-1,"$A(arguments).slice(1));"],[1,"args);\r\n      }"],[0,"\r\n  "]],"start1":858,"start2":858,"length1":32,"length2":23},{"diffs":[[0,"otype, '"],[-1,"$"],[1,"_"],[0,"', {\r\n  "]],"start1":953,"start2":953,"length1":17,"length2":17},{"diffs":[[0,"\n   "],[-1," if('toProc' in this)"],[0," ret"]],"start1":988,"start2":988,"length1":29,"length2":8},{"diffs":[[0,"his."],[-1,"_send('"],[0,"toProc"],[-1,"')"],[0,";\r\n "]],"start1":1001,"start2":1001,"length1":23,"length2":14},{"diffs":[[0,"    "],[-1,"this.forEach(function(value, index) {"],[1,"if(memo instanceof Function) {\r\n      iterator = memo;\r\n      memo = undefined;\r\n    }\r\n    \r\n    this.forEach(function(value, index) {\r\n      if(memo === undefined) memo = value; // Uh, it's all I can think to do."],[0,"\r\n  "]],"start1":1118,"start2":1118,"length1":45,"length2":222},{"diffs":[[0,"s.toProc"],[-1,"()"],[0," : first"]],"start1":1521,"start2":1521,"length1":18,"length2":16},{"diffs":[[0,"first.toProc"],[-1,"()"],[0,");\r\n  },\r\n  "]],"start1":1532,"start2":1532,"length1":26,"length2":24},{"diffs":[[0," {\r\n"],[-1,"    console.log(this);\r\n"],[0,"    "]],"start1":2623,"start2":2623,"length1":32,"length2":8},{"diffs":[[0,"\n  }"],[-1,"/*,\r\n  toProc: function toProc() {\r\n    var messages = this.split('.');\r\n    return function(thing) {\r\n      return messages.inject(thing, function(obj, message) {\r\n        return obj._send(message);\r\n      });\r\n    };\r\n  }*/"],[0,""],[1,""],[0,"\r\n})"]],"start1":4990,"start2":4990,"length1":233,"length2":8},{"diffs":[[0," {\r\n"],[-1,"      console.log(\"thing:\", thing);\r\n"],[0,"    "]],"start1":5140,"start2":5140,"length1":45,"length2":8},{"diffs":[[0,"    "],[-1,"console.log(\"obj:\", obj);\r\n        console.log(\"message:\", message);\r\n        return obj._send(message);\r\n      });\r\n    };\r\n  }\r\n});\r\n\r\nvar f = 'toProc'.toProc;\r\nconsole.log(f);\r\nconsole.log(f('toString'));\r\n\r\n/*\r\nvar tests = ['test1', 'test2', 'test3'];\r\nconsole.log('test'.toProc, ['test'].toProc);\r\n//console.log('test'.$, ['test'].$);\r\nconsole.log(tests.first, tests.last"],[1,"return obj._send(message);\r\n      });\r\n    };\r\n  }\r\n});\r\n\r\nvar stuff = [\r\n  {name: 'TJ Peden', age: 25, sex: 'male'},\r\n  {name: 'Patrick Reames', age: 22, sex: 'male'},\r\n  {name: 'Becca Wilson', age: 25, sex: 'female'},\r\n  {name: 'Wes Wilson', age: 23, sex: 'male'}\r\n];\r\n\r\nvar other = stuff.pluck('name', 'age').sortBy('first'._);\r\nconsole.log(other"],[0,");\r\n"],[-1,"*/"]],"start1":5210,"start2":5210,"length1":386,"length2":357}]],"length":5567,"saved":false}
{"contributors":[],"silentsave":false,"ts":1345763835502,"patch":[[{"diffs":[[0,");\r\n"],[-1,"\r\nvar stuff = [\r\n  {name: 'TJ Peden', age: 25, sex: 'male'},\r\n  {name: 'Patrick Reames', age: 22, sex: 'male'},\r\n  {name: 'Becca Wilson', age: 25, sex: 'female'},\r\n  {name: 'Wes Wilson', age: 23, sex: 'male'}\r\n];\r\n\r\nvar other = stuff.pluck('name', 'age').sortBy('first'._);\r\nconsole.log(other);\r\n"]],"start1":5267,"start2":5267,"length1":300,"length2":4}]],"length":5271,"saved":false}
{"ts":1345763891294,"patch":[[{"diffs":[[0,"\n  }"],[-1,"/*,\r\n  toProc: function toProc() {\r\n    var procs = this.map('toProc'.toProc());\r\n    return function(thing) {\r\n      return procs.map(function(proc) {\r\n        return proc(thing);\r\n      });\r\n    };\r\n  }*/"],[0,"\r\n};"]],"start1":2187,"start2":2187,"length1":214,"length2":8}]],"length":5065,"saved":false}
