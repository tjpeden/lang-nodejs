{"ts":1345640999239,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var should = require('should');\nrequire('../lang.node.js');\n\ndescribe('Object', function() {\n  describe('#extend()', function() {\n    it(\"should extend an object with theproperties of another\", function() {\n      var object = Object.extend({a: true}, {b: 1});\n      object.should.have.property('a', true);\n      object.should.have.property('b', 1);\n    });\n  });\n});"]],"start1":0,"start2":0,"length1":0,"length2":366}]],"length":366}
{"contributors":[],"silentsave":false,"ts":1345763722511,"patch":[[{"diffs":[[-1,"var should = "],[0,"requ"]],"start1":0,"start2":0,"length1":17,"length2":4},{"diffs":[[0,"hould');"],[1,"\r"],[0,"\nrequire"]],"start1":10,"start2":10,"length1":16,"length2":17},{"diffs":[[0,"de.js');"],[-1,"\n"],[1,"\r\n\r"],[0,"\ndescrib"]],"start1":39,"start2":39,"length1":17,"length2":19},{"diffs":[[0,"tion() {"],[1,"\r"],[0,"\n  descr"]],"start1":74,"start2":74,"length1":16,"length2":17},{"diffs":[[0,"function() {"],[1,"\r"],[0,"\n    it(\"sho"]],"start1":108,"start2":108,"length1":24,"length2":25},{"diffs":[[0,"tion() {"],[1,"\r"],[0,"\n      v"]],"start1":190,"start2":190,"length1":16,"length2":17},{"diffs":[[0,"{b: 1});"],[1,"\r"],[0,"\n      o"]],"start1":244,"start2":244,"length1":16,"length2":17},{"diffs":[[0,", true);"],[1,"\r"],[0,"\n      o"]],"start1":291,"start2":291,"length1":16,"length2":17},{"diffs":[[0," 1);"],[1,"\r"],[0,"\n    });"],[1,"\r"],[0,"\n  });"],[-1,"\n});"],[1,"\r\n  \r\n  describe('#_send()', function() {\r\n    it(\"should call the function passed in by name and return the result\", function() {\r\n      var result = [1,2]._send('toString');\r\n      result.should.eql('1,2');\r\n    });\r\n    \r\n    it(\"should return the value of the property passed in by name\", function() {\r\n      var result = [1,2]._send('length');\r\n      result.should.eql(2);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Array', function() {\r\n  var array;\r\n  \r\n  beforeEach(function() {\r\n    array = [1,2,3];\r\n  });\r\n  \r\n  describe('#clear()', function() {\r\n    it(\"should empty out the array\", function() {\r\n      array.clear();\r\n      array.should.be.empty;\r\n    });\r\n  });\r\n  \r\n  describe('#first', function() {\r\n    it(\"should return the first element of the array\", function() {\r\n      var result = array.first;\r\n      result.should.eql(1);\r\n    });\r\n  });\r\n  \r\n  describe('#last', function() {\r\n    it(\"should return the last element of the array\", function() {\r\n      var result = array.last;\r\n      result.should.eql(3);\r\n    });\r\n  });\r\n  \r\n  describe('#inject()', function() {\r\n    it(\"should return something...\", function() {\r\n      var result = array.inject(0, function(memo, n) {\r\n        return memo + n;\r\n      });\r\n      result.should.eql(6);\r\n    });\r\n  });\r\n});\r\n"]],"start1":339,"start2":339,"length1":22,"length2":1293}]],"length":1632,"saved":false}
